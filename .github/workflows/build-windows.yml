on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag tp build."
        required: true
        type: string

jobs:
  windows-release-build:
    runs-on: windows-latest
    steps:
    - name: Checkout Source for dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.tag }}
        persist-credentials: true
        fetch-depth: 0
    - name: Checkout Source for push
      if: ${{ github.event_name == 'push' }}
      uses: actions/checkout@v3
      with:
        persist-credentials: true
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21
    - name: Find Go Install Location
      shell: pwsh
      run: |
        $go_install_dir = (Get-Command go | Get-Item).Directory.FullName
        Add-Content -Path $env:GITHUB_ENV "MY_GO_INSTALL_DIR=$go_install_dir"
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          curl
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-make
          mingw-w64-x86_64-gpgme
          mingw-w64-x86_64-pkg-config
    - name: Build Skopeo
      shell: msys2 {0}
      run: |
        export PATH=${PATH}:`cygpath ${MY_GO_INSTALL_DIR}`
        CGO_ENABLED=1 CC=${MSYSTEM_CHOST}-gcc CXX=${MSYSTEM_CHOST}-g++ mingw32-make.exe bin/skopeo
        ldd bin/skopeo | grep mingw64 | cut -d ' ' -f 3 | xargs -I{} cp -u {} bin
        mv bin/skopeo bin/skopeo.exe
        strip -x bin/skopeo.exe
    - name: Get current release for dispatch
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}    
      id: current_release_dispatch
      uses: cardinalby/git-get-release-action@1.2.2
      if: ${{ github.event_name == 'workflow_dispatch' }}
      with:
        tag: ${{ inputs.tag }}
    - name: Add current dispatch release tag to environment
      if: ${{ github.event_name == 'workflow_dispatch' }}
      shell: pwsh
      run: |
        $current_release_tag = "${{ steps.current_release_dispatch.outputs.tag_name }}"
        Add-Content -Path $env:GITHUB_ENV "MY_CURRENT_RELEASE_TAG_NAME=$current_release_tag"
    - name: Get current release for push
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}    
      id: current_release_push
      uses: cardinalby/git-get-release-action@1.2.2
      if: ${{ github.event_name == 'push' }}
      with:
        commitSha: ${{ env.GITHUB_SHA }}
    - name: Add current push release tag to environment
      if: ${{ github.event_name == 'push' }}
      shell: pwsh
      run: |
        $current_release_tag = "${{ steps.current_release_push.outputs.tag_name }}"
        Add-Content -Path $env:GITHUB_ENV "MY_CURRENT_RELEASE_TAG_NAME=$current_release_tag"
    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.2
      with:
        type: 'zip'
        filename: 'skopeo-windows-x86_64-${{ env.MY_CURRENT_RELEASE_TAG_NAME }}.zip'
        directory: bin
    - name: Upload files to GitHub release
      uses: svenstaro/upload-release-action@2.3.0
      with:
        file: 'bin/skopeo-windows-x86_64-${{ env.MY_CURRENT_RELEASE_TAG_NAME }}.zip'
        tag: ${{ env.MY_CURRENT_RELEASE_TAG_NAME }}
        overwrite: 'true'
  linux-release-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source for dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.tag }}
        persist-credentials: true
        fetch-depth: 0
    - name: Checkout Source for push
      if: ${{ github.event_name == 'push' }}
      uses: actions/checkout@v3
      with:
        persist-credentials: true
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21
    - name: Setup Ubuntu Packages
      run: sudo apt-get install -y install libgpgme-dev libassuan-dev libbtrfs-dev pkg-config
    - name: Build Skopeo
      run: |
        CGO_ENABLED=1 make bin/skopeo
        strip -x bin/skopeo
    - name: Get current release for dispatch
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}    
      id: current_release_dispatch
      uses: cardinalby/git-get-release-action@1.2.2
      if: ${{ github.event_name == 'workflow_dispatch' }}
      with:
        tag: ${{ inputs.tag }}
    - name: Add current dispatch release tag to environment
      if: ${{ github.event_name == 'workflow_dispatch' }}
      shell: pwsh
      run: |
        $current_release_tag = "${{ steps.current_release_dispatch.outputs.tag_name }}"
        Add-Content -Path $env:GITHUB_ENV "MY_CURRENT_RELEASE_TAG_NAME=$current_release_tag"
    - name: Get current release for push
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}    
      id: current_release_push
      uses: cardinalby/git-get-release-action@1.2.2
      if: ${{ github.event_name == 'push' }}
      with:
        commitSha: ${{ env.GITHUB_SHA }}
    - name: Add current push release tag to environment
      if: ${{ github.event_name == 'push' }}
      shell: pwsh
      run: |
        $current_release_tag = "${{ steps.current_release_push.outputs.tag_name }}"
        Add-Content -Path $env:GITHUB_ENV "MY_CURRENT_RELEASE_TAG_NAME=$current_release_tag"
    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.2
      with:
        type: 'zip'
        filename: 'skopeo-linux-x86_64-${{ env.MY_CURRENT_RELEASE_TAG_NAME }}.zip'
        directory: bin
    - name: Upload files to GitHub release
      uses: svenstaro/upload-release-action@2.3.0
      with:
        file: 'bin/skopeo-linux-x86_64-${{ env.MY_CURRENT_RELEASE_TAG_NAME }}.zip'
        tag: ${{ env.MY_CURRENT_RELEASE_TAG_NAME }}
        overwrite: 'true'
